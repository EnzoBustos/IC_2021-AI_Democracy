{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Extrator sumários das Atas - AI Democracy","provenance":[],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyPy7YmQVKhquJ5BsRYc7FcI"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"0BK6HuI4N_Qo"},"source":["# **Extrator de sumários das Atas do DAR**\r\n","\r\n","Os códigos montados nesse *notebook* tem como objetivo extrair os sumários que estão nas Atas das Reuniões Plenárias que estão dentro do Diário da Assembléia da República, vale lembrar que essas atas já foram extraídas em formato de arquivo de texto simples, com codificação UTF-8 [deste site](https://debates.parlamento.pt/catalogo/r3/dar/01/14/02).\r\n","\r\n","Para isso tentaremos fazer um pequeno *pipeline* de cada uma das ações e métodos que deveremos implementar para poder extrair fielmente o sumário de qualquer Ata de forma geral, assim sempre que tivermos novas Atas é só rodar esse código para termos um sumário parcialmente limpo.\r\n","\r\n","*   Abrir as pastas e documentos onde estão os arquivos\r\n","*   Analisar principais padrões de onde estão os sumários\r\n","*   Identificar padrões de troca de página\r\n","*   Identificar padrões de troca de parágrafo\r\n","*   Extrair os sumários\r\n","*   Aplicar limpeza nos arquivos"]},{"cell_type":"markdown","metadata":{"id":"gDcHo0Eh9IRm"},"source":["# **Abrindo local dos documentos:**\r\n","\r\n","Vamos abrir então nossa pasta do Drive que contém já nossas Atas em formato de arquivo de texto e já extrair uma lista com esses documentos."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8oDHVCCRBXEs","executionInfo":{"status":"ok","timestamp":1615665059857,"user_tz":180,"elapsed":27344,"user":{"displayName":"Enzo Bustos da Silva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GipjzEo8ZMU7T5CScvwquuNadVZOv9a7EefCtELMQ=s64","userId":"00423683093258305256"}},"outputId":"13cd189a-6e4b-48cf-dbfe-ac2893db217d"},"source":["from google.colab import drive\r\n","drive.mount('/content/drive', force_remount=1)"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d8JcDh03_STM","executionInfo":{"status":"ok","timestamp":1615665073545,"user_tz":180,"elapsed":1353,"user":{"displayName":"Enzo Bustos da Silva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GipjzEo8ZMU7T5CScvwquuNadVZOv9a7EefCtELMQ=s64","userId":"00423683093258305256"}},"outputId":"be202658-d77d-41e6-eda8-8a2b1718c61c"},"source":["cd '/content/drive/MyDrive/Iniciação Científica/AI Democracy/Atas em .txt'"],"execution_count":2,"outputs":[{"output_type":"stream","text":["/content/drive/MyDrive/Iniciação Científica/AI Democracy/Atas em .txt\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xOt7QYJ1Bivl","executionInfo":{"status":"ok","timestamp":1615665161599,"user_tz":180,"elapsed":15393,"user":{"displayName":"Enzo Bustos da Silva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GipjzEo8ZMU7T5CScvwquuNadVZOv9a7EefCtELMQ=s64","userId":"00423683093258305256"}},"outputId":"1db08935-060b-4a8b-e6e2-0578c16e4c0f"},"source":["import os \r\n","\r\n","#Listando documentos\r\n","document_names = os.listdir()\r\n","\r\n","#Abrindo os documentos e extraindo os textos\r\n","list_texts = []\r\n","for document in document_names:\r\n","    with open(document, 'r') as doc:\r\n","        text = doc.read()\r\n","        list_texts.append(text)\r\n","\r\n","#Imprimindo uma parte do texto da primeira ata\r\n","print(list_texts[0][:3000])"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Quinta-feira, 17 de setembro de 2020 I Série — Número 1\n","\n","\n","\n","XIV LEGISLATURA 2.ª SESSÃO LEGISLATIVA (2020-2021) \n","\n"," REUNIÃOPLENÁRIADE16DESETEMBRODE 2020 \n","\n","Presidente: Ex.mo Sr. Eduardo Luís Barreto Ferro Rodrigues \n","\n","Secretários: Ex.mos Srs. Maria da Luz Gameiro Beja Ferreira Rosinha Duarte Rogério Matos Ventura Pacheco \n","\n","\n","\n","\n","\n","S U M Á R I O \n","\n","O Presidente declarou aberta a sessão às 15 horas e 2 \n","\n","minutos. Deu-se conta da entrada na Mesa dos Projetos de Lei n.os \n","\n","485 a 505/XIV/1.ª, dos Projetos de Resolução n.os 612 a 617/XIV/1.ª, 619 a 624/XIV/1.ª e 626/XIV/1.ª e do Inquérito Parlamentar n.º 6/XIV/1.ª. \n","\n","Em declaração política, o Deputado Luís Moreira Testa (PS) salientou a importância de serem levadas a cabo políticas de coesão territorial para combater as assimetrias do \n","\n","País, nomeadamente através da valorização do interior e do estabelecimento de relações transfronteiriças entre Portugal e Espanha. No fim, respondeu a pedidos de esclarecimento dos Deputados José Luís Ferreira (PEV), André Ventura (CH), João Dias (PCP), Cecília Meireles (CDS-PP), José Maria Cardoso (BE) e Carlos Peixoto (PSD). \n","\n","Em declaração política, o Deputado António Ventura (PSD), a propósito da aproximação das eleições legislativas nos Açores, fez um balanço da governação socialista na  \n","\n"," \n","\n","I SÉRIE — NÚMERO 1 \n","\n","\n","\n","2 \n","\n","Região, tendo criticado a sua atuação. Respondeu, depois, a pedidos de esclarecimento das Deputadas Lara Martinho (PS), Alma Rivera (PCP) e Mariana Silva (PEV). \n","\n","Em declaração política, a Deputada Joana Mortágua (BE) saudou os alunos, bem como os seus familiares, pelo início do novo ano letivo e teceu críticas ao modo como o Governo, em contexto de pandemia, preparou o regresso às aulas na escola pública. De seguida, respondeu a pedidos de esclarecimento dos Deputados Cláudia André (PSD), Ana Rita Bessa (CDS-PP), Paula Santos (PCP), Mariana Silva (PEV) e Tiago Estevão Martins (PS). \n","\n","Em declaração política, a Deputada Paula Santos (PCP) assinalou o 41.º aniversário do Serviço Nacional de Saúde, enaltecendo o seu papel e o dos seus profissionais e salientando a necessidade do seu reforço, em detrimento da mobilização de recursos públicos para o setor privado, para superar as dificuldades com que se depara atualmente e acautelar o eventual agravamento da pandemia durante o período do inverno. No final, respondeu a pedidos de esclarecimento dos Deputados Sandra Pereira (PSD), Moisés Ferreira (BE), André Ventura (CH), João Cotrim de Figueiredo (IL), Ana Rita Bessa (CDS-PP), José Luís Ferreira (PEV) e Hortense Martins (PS). \n","\n","Em declaração política, o Deputado João Gonçalves Pereira (CDS-PP) teceu críticas à apresentação do balanço da consulta pública da Visão Estratégica para o Plano de Recuperação Económica de Portugal 2020-2030, recordando que o seu grupo parlamentar se mostrou disponível na Sessão Legislativa anterior para contribuir no sentido da recuperação económica do País no período pandémico. Respondeu, depois, a pedidos de esclarecimento dos Deputados J\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"tV7nqdAD9Ke4"},"source":["# **Padrões de localização do sumário:**\r\n","\r\n","Analisando alguns dos sumários podemos perceber rapidamente que eles se encontram a partir da `string` \"S U M Á R I O\" e vai até uma linha que contém as palavras \"presidente\", \"encerrou\", \"sessão\".\r\n","\r\n","Então podemos pensar em tokenizar nosso texto em cada quebra de linha, excluir tudo até \"S U M Á R I O\" e tudo depois da linha que contém \"presidente\", \"encerrou\", \"sessão\"."]},{"cell_type":"code","metadata":{"id":"kn4wS7UMuGep","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1615665174409,"user_tz":180,"elapsed":1807,"user":{"displayName":"Enzo Bustos da Silva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GipjzEo8ZMU7T5CScvwquuNadVZOv9a7EefCtELMQ=s64","userId":"00423683093258305256"}},"outputId":"1ad074ff-591b-4dc8-9710-acd5e5690d90"},"source":["def extract_summary(list_texts):\r\n","\r\n","    texts = list_texts.copy()\r\n","    summaries = []\r\n","\r\n","    for i in range(len(texts)):\r\n","\r\n","        #Definindo onde começa o sumário e limpando antes disso\r\n","        text = texts[i]\r\n","        text = text[text.find('S U M Á R I O'):]\r\n","\r\n","        #Trabalhar com as linhas é mais fácil\r\n","        text = text.split(sep='\\n')\r\n","\r\n","        #Aplicando o método pensado\r\n","        for j in range(len(text)):\r\n","\r\n","            #Definição dos termos importantes\r\n","            presidente = 'Presidente' in text[j]\r\n","            encerrou = 'encerrou' in text[j]\r\n","            sessão = 'sessão' in text[j]\r\n","            ponto = '.' in text[j]\r\n","            \r\n","            #Checando se todos os termos aparecem na linha\r\n","            if (presidente and encerrou and sessão and ponto):\r\n","                text = text[:j+1]\r\n","                text = '\\n'.join(text)\r\n","                break\r\n","\r\n","            #Se não tiver o ponto aconteceu algum erro de formatação\r\n","            #Vamos então buscar onde termina o parágrafo\r\n","            elif (presidente and encerrou and sessão and not ponto):\r\n","                for k in range(1, len(text[j+1:]) + 1):\r\n","                    if '.' in text[j+k] and 'horas' in text[j+k]:\r\n","                        text = text[:j+k+1]\r\n","                        text = '\\n'.join(text)\r\n","                        break\r\n","                break\r\n","\r\n","        #Como sempre terminamos com um .join()\r\n","        #Se o texto ainda for uma lista aconteceu um erro\r\n","        if type(text) is list:\r\n","            print(\"Erro na Ata de index {}\".format(i))\r\n","\r\n","        summaries.append(text)\r\n","    return summaries\r\n","\r\n","summaries = extract_summary(list_texts)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Erro na Ata de index 32\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"T9nPbET2A-XQ"},"source":["Beleza, nosso extrator de sumários funcionou muito bem. Olhando manualmente o erro na Ata 33 (index 32), pode-se perceber que também é marcado no sumário quando o Presidente encerrou a sessão, mas por ser véspera de Natal ele faz algumas outras considerações com a finalização.\r\n","\r\n","De qualquer forma vamos arrumar isso rapidamente."]},{"cell_type":"code","metadata":{"id":"_Gq-U3GRBTDM","executionInfo":{"status":"ok","timestamp":1615665181974,"user_tz":180,"elapsed":991,"user":{"displayName":"Enzo Bustos da Silva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GipjzEo8ZMU7T5CScvwquuNadVZOv9a7EefCtELMQ=s64","userId":"00423683093258305256"}}},"source":["for i in range(len(summaries[32])):\r\n","    if 'Encerrou, depois, a sessão eram 19 horas e 27 minutos.' in summaries[32][i]:\r\n","        summaries[32] = summaries[32][:i + 1]\r\n","        summaries[32] = '\\n'.join(summaries[32])\r\n","        break"],"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JRaCksrNhh28"},"source":["Vamos printar o último token da texto só por desencargo de consciência, se algum estiver muito diferente vai saltar aos olhos facilmente."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"moQel8dqhxx_","executionInfo":{"status":"ok","timestamp":1615665184464,"user_tz":180,"elapsed":484,"user":{"displayName":"Enzo Bustos da Silva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GipjzEo8ZMU7T5CScvwquuNadVZOv9a7EefCtELMQ=s64","userId":"00423683093258305256"}},"outputId":"843b7f8f-96ff-4bfe-ce60-0a09a0e91cae"},"source":["i = 0\r\n","for text in summaries:\r\n","    i += 1\r\n","    text = text.split('\\n')\r\n","    print(i, '-', text[-1])"],"execution_count":6,"outputs":[{"output_type":"stream","text":["1 - O Presidente (Fernando Negrão) encerrou a sessão eram 18 horas e 59 minutos. \n","2 - O Presidente (Fernando Negrão) encerrou a sessão eram 19 horas e 3 minutos. \n","3 - O Presidente (Fernando Negrão) encerrou a sessão eram 13 horas e 55 minutos. \n","4 - O Presidente encerrou a sessão eram 18 horas e 28 minutos. \n","5 - O Presidente encerrou a sessão eram 18 horas e 13 minutos. \n","6 - O Presidente (Fernando Negrão) encerrou a sessão eram 14 horas. \n","7 - O Presidente (Fernando Negrão) encerrou a sessão eram 18 horas e 56 minutos. \n","8 - O Presidente (José Manuel Pureza) encerrou a sessão eram 18 horas e 11 minutos. \n","9 - O Presidente (José Manuel Pureza) encerrou a sessão eram 13 horas e 32 minutos. \n","10 - O Presidente (José Manuel Pureza) encerrou a sessão eram 19 horas e 12 minutos. \n","11 - O Presidente (José Manuel Pureza) encerrou a sessão eram 18 horas e 29 minutos. \n","12 - O Presidente encerrou a sessão eram 12 horas e 33 minutos. \n","13 - O Presidente (José Manuel Pureza) encerrou a sessão eram 20 horas e 27 minutos. \n","14 - O Presidente (José Manuel Pureza) encerrou a sessão eram 18 horas e 13 minutos. \n","15 - O Presidente (António Filipe) encerrou a sessão eram 13 horas e 53 minutos. \n","16 - O Presidente (António Filipe) encerrou a sessão eram 18 horas e 11 minutos. \n","17 - O Presidente (António Filipe) encerrou a sessão eram 14 horas e 18 minutos. \n","18 - O Presidente encerrou a sessão eram 19 horas e 27 minutos. \n","19 - O Presidente encerrou a sessão eram 18 horas e 52 minutos. \n","20 - Administração Interna (Eduardo Cabrita). No final, a Câmara concedeu a autorização solicitada. O Presidente encerrou a sessão eram 17 horas e 23 \n","21 - O Presidente (Fernando Negrão) encerrou a sessão eram 13 horas e 16 minutos. \n","22 - O Presidente (Fernando Negrão) encerrou a sessão eram 13 horas e 51 minutos. \n","23 - eram 13 horas e 44 minutos. \n","24 - O Presidente (Fernando Negrão) encerrou a sessão eram 13 horas e 54 minutos. \n","25 - O Presidente encerrou a sessão eram 14 horas e 52 minutos. \n","26 - eram 19 horas e 17 minutos. \n","27 - O Presidente encerrou a sessão eram 18 horas e 11 minutos. \n","28 - 592 e 593/XIV/2.ª e 595 e 596/XIV/2.ª. O Presidente (José Manuel Pureza) encerrou a sessão \n","29 - O Presidente (José Manuel Pureza) encerrou a sessão eram 14 horas e 6 minutos. \n","30 - por videoconferência, na reunião plenária. O Presidente encerrou a sessão eram 19 horas e 22 \n","31 - por videoconferência, na reunião plenária. O Presidente (António Filipe) encerrou a sessão eram 17 \n","32 - O Presidente encerrou a sessão eram 13 horas e 28 minutos. \n","33 - com as perspetivas positivas para o ano de 2021. Encerrou, depois, a sessão eram 19 horas e 27 minutos. \n","34 - A Presidente (Edite Estrela) encerrou a sessão eram 17 horas e 56 minutos. \n","35 - por videoconferência, na reunião plenária. A Presidente (Edite Estrela) encerrou a sessão eram 18 \n","36 - O Presidente encerrou a sessão eram 12 horas e 53 minutos. \n","37 - A Presidente (Edite Estrela) encerrou a sessão eram 14 horas e 26 minutos. \n","38 - A Presidente (Edite Estrela) encerrou a sessão eram 17 horas e 9 minutos. \n","39 - A Presidente (Edite Estrela) encerrou a sessão eram 13 horas e 38 minutos. \n","40 - por videoconferência, na reunião plenária. O Presidente encerrou a sessão eram 18 horas e 36 \n","41 - O Presidente (Fernando Negrão) encerrou a sessão eram 19 horas e 6 minutos. \n","42 - O Presidente (José Manuel Pureza) encerrou a sessão eram 18 horas e 21 minutos. \n","43 - O Presidente encerrou a sessão eram 15 horas e 15 minutos. \n","44 - O Presidente (José Manuel Pureza) encerrou a sessão eram 19 horas e 4 minutos. \n","45 - O Presidente (José Manuel Pureza) encerrou a sessão eram 18 horas e 39 minutos. \n","46 - O Presidente (António Filipe) encerrou a sessão eram 20 horas e 45 minutos. \n","47 - O Presidente (António Filipe) encerrou a sessão eram 18 horas e 55 minutos. \n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"zjMxqqiviFf_"},"source":["Bom basicamente está OK, todos terminam com o presidente declarando o final da sessão, claro que tem algumas que saltam aos olhos por serem diferentes, mas é questão de paragrafação. Provavelmente os parágrafos que estão maiores tiveram algum problema durante as quebras de linha."]},{"cell_type":"markdown","metadata":{"id":"FvpsHS8n9LK-"},"source":["# **Padrões de troca de página:**\r\n","\r\n","Vamos agora pensar nos principais padrões de troca de página que existem.\r\n","\r\n","A maioria das atas estão entre a primeira e segunda páginas, fazendo com que extrair essa primeira divisória seja bem fácil onde se encontra a `string` \"I SÉRIE — NÚMERO X\" em que o número representa qual o número da própria ata, seguido do número 2 da página. Uma observação sobre isso é que precisamos identificar quando ocorre também troca de parágrafo entre as páginas ou não.\r\n","\r\n","Outra troca são para atas que contém 3 páginas, essas atas contém a data, uma coisa que podemos fazer é checar o mês que está em caixa alta e a partir dele remover dia, ano e a marcação da terceira página.\r\n","\r\n","Vale notar que é alternado, ou seja, páginas pares estão com SÉRIE e páginas ímpares com as DATAS, isso é útil até para se for feita uma limpeza mais geral dos documentos.\r\n","\r\n","Observe: Testando deu para perceber que a série sempre está em um index par, mas não vou usar esse fato"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LNH92g2NnJ5F","executionInfo":{"status":"ok","timestamp":1615665190681,"user_tz":180,"elapsed":598,"user":{"displayName":"Enzo Bustos da Silva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GipjzEo8ZMU7T5CScvwquuNadVZOv9a7EefCtELMQ=s64","userId":"00423683093258305256"}},"outputId":"e402ec51-6a96-434b-f38c-4a32f158b471"},"source":["def find_dates(list_texts):\r\n","    dates = []\r\n","    for text in list_texts:\r\n","        text = text.split('\\n')\r\n","        while len(text[0]) < 2:\r\n","            text.pop(0)\r\n","        text = text[0]\r\n","        text = text[text.find(', ') + 2:text.find(' I')].upper()\r\n","        dates.append(text)\r\n","    return dates\r\n","\r\n","\r\n","def remove_page_marks(list_texts, list_dates):\r\n","    #A serie pode aparecer em dois formatos\r\n","    #Como vamos testar se existem também quebra de parágrafo\r\n","    #Teremos 4 possíveis formatos\r\n","    \r\n","    texts = list_texts.copy()\r\n","    dates = list_dates.copy()\r\n","\r\n","    for i in range(len(texts)):\r\n","\r\n","        #Primeiro vamos retirar o cabeçalho de SERIE\r\n","        serie_1 = '.  \\n\\n \\n\\nI SÉRIE — NÚMERO {} \\n\\n\\n\\n2 \\n\\n'.format(i + 1)\r\n","        serie_2 = '.  \\n\\n \\n\\nI SÉRIE — NÚMERO {} \\n\\n\\n\\n\\n\\n2 \\n\\n'.format(i + 1)\r\n","        serie_3 = '  \\n\\n \\n\\nI SÉRIE — NÚMERO {} \\n\\n\\n\\n2 \\n\\n'.format(i + 1)\r\n","        serie_4 = '  \\n\\n \\n\\nI SÉRIE — NÚMERO {} \\n\\n\\n\\n\\n\\n2 \\n\\n'.format(i + 1)\r\n","\r\n","        if serie_1 in texts[i]:\r\n","            texts[i] = texts[i].replace(serie_1, '\\n\\n')\r\n","        elif serie_2 in texts[i]:\r\n","            texts[i] = texts[i].replace(serie_2, '\\n\\n')\r\n","        elif serie_3 in texts[i]:\r\n","            texts[i] = texts[i].replace(serie_3, ' ')\r\n","        elif serie_4 in texts[i]:\r\n","            texts[i] = texts[i].replace(serie_4, ' ')\r\n","        else:\r\n","            print(\"Erro na Ata de index {}\".format(i))\r\n","        \r\n","        #Agora vamos fazer o mesmo processo para as datas\r\n","        date_1 = '.  \\n\\n \\n\\n{} \\n\\n3 \\n\\n'.format(dates[i])\r\n","        date_2 = '  \\n\\n \\n\\n{} \\n\\n3 \\n\\n'.format(dates[i])\r\n","\r\n","        if date_1 in texts[i]:\r\n","            texts[i] = texts[i].replace(date_1, '\\n\\n')\r\n","        elif date_2 in texts[i]:\r\n","            texts[i] = texts[i].replace(date_2, ' ')\r\n","        #Aqui não podemos colocar um else\r\n","        #Pelo fato que todas as que não tem 3 pgs iam cair aqui\r\n","\r\n","    return texts\r\n","\r\n","dates = find_dates(list_texts)\r\n","clean_texts = remove_page_marks(summaries, dates)"],"execution_count":7,"outputs":[{"output_type":"stream","text":["Erro na Ata de index 37\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ArV91CAtOvKT"},"source":["Por algum motivo esqueceram de colocar o cabeçalho na Ata 38 (index 37) vamos então arrumar essa formatação errada que aconteceu"]},{"cell_type":"code","metadata":{"id":"W9gQdZ7WOuD-","executionInfo":{"status":"ok","timestamp":1615665197284,"user_tz":180,"elapsed":496,"user":{"displayName":"Enzo Bustos da Silva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GipjzEo8ZMU7T5CScvwquuNadVZOv9a7EefCtELMQ=s64","userId":"00423683093258305256"}}},"source":["clean_texts[37] = clean_texts[37].replace('  \\n\\n \\n\\n\\n\\n\\n\\n', ' ')"],"execution_count":8,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uOKEDeN79LwO"},"source":["# **Padrões de troca de parágrafos:**\r\n","\r\n","Bom, agora já tiramos as imperfeições que existem no nosso texto basta apenas deixar corretamente um parágrafo por linha, um jeito bom de fazer isso é separar nosso texto por quebra de linha e ver se aquela linha termina em ponto final."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AD_G5xlLLhMN","executionInfo":{"status":"ok","timestamp":1615668631562,"user_tz":180,"elapsed":1380,"user":{"displayName":"Enzo Bustos da Silva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GipjzEo8ZMU7T5CScvwquuNadVZOv9a7EefCtELMQ=s64","userId":"00423683093258305256"}},"outputId":"1b5ff0ef-12a4-4145-c89f-5aac040c6aa2"},"source":["def clean_tokens(tokenized_text):\r\n","\r\n","    text = tokenized_text.copy()\r\n","    to_del = []\r\n","\r\n","    for i in range(len(text)):\r\n","        if 'S U M Á R I O' in text[i]:\r\n","            text[i] = text[i].replace('S U M Á R I O', '')\r\n","        elif len(text[i]) <= 2:        \r\n","            to_del.append(i)\r\n","\r\n","    for delete in to_del:\r\n","        text.pop(delete)\r\n","    \r\n","    return text\r\n","    \r\n","\r\n","def clean_paragraphs(list_texts):\r\n","\r\n","    texts = list_texts.copy()\r\n","    new_texts = []\r\n","\r\n","    for text in texts:\r\n","        text = text.replace('. \\n\\n', '.\\n')\r\n","        text = text.replace(' \\n\\n', '')\r\n","        text = text.split('\\n')\r\n","        text = clean_tokens(text)\r\n","        text = clean_tokens(text)\r\n","        text = clean_tokens(text)\r\n","        compound = ''\r\n","        for line in text:\r\n","            if '.' in line[-1]:\r\n","                compound = compound + '\\n'  + line\r\n","            else:\r\n","                compound = compound + ' '  + line\r\n","        new_texts.append(compound[1:])\r\n","\r\n","    return new_texts\r\n","\r\n","total_clean = clean_paragraphs(clean_texts)\r\n","print(total_clean[1])"],"execution_count":75,"outputs":[{"output_type":"stream","text":["O Presidente declarou aberta a sessão às 15 horas e 4minutos. Deu-se conta da entrada na Mesa das Propostas deResolução n.os 11 e 12/XIV/2.ª, dos Projetos de Lei n.os 506, 507 e 509 a 511/XIV/2.ª e dos Projetos de Resolução n.os 627 a 631/XIV/2.ª.\n","Foi discutido o Projeto de Resolução n.º 561/XIV/1.ª (PS) — Recomenda ao Governo que crie uma tarifa social de acesso a serviços de internet. Intervieram os Deputados Filipe Pacheco (PS), Inês de Sousa Real (PAN), João Cotrim deFigueiredo (IL), Hugo Martins de Carvalho (PSD), Mariana Silva (PEV), Bruno Dias (PCP), Isabel Pires (BE), João Gonçalves Pereira (CDS-PP) e André Ventura (CH). Foi discutido, na generalidade, o Projeto de Lei n.º 474/XIV/1.ª (PSD) — Programa especial de apoio social aos ex-trabalhadores da COFACO. Na abertura do debate, pronunciou-se o Deputado Paulo Moniz (PSD), seguindo-se no uso da palavra os Deputados João Azevedo Castro (PS), João Pinho de Almeida (CDS-PP), Isabel Pires (BE) e Alma Rivera (PCP)\n","Foram apreciados, na generalidade, os Projetos de Lei n.os 483/XIV/1.ª (BE) — Alarga o regime extraordinário de proteção dos arrendatários (4.ª alteração à Lei n.º 1-A/2020, de 19 de março) e 488/XIV/1.ª (PCP) — Alarga o regime extraordinário de proteção aos arrendatários até 31 de dezembro de 2021 e define o prazo para entrega de candidaturas para apoio financeiro do IHRU até 31 de dezembro de 2020. Proferiram intervenções os Deputados Maria Manuel Rola (BE), Bruno Dias (PCP), Inês de Sousa Real (PAN), Hugo Costa (PS), João Gonçalves Pereira (CDS-PP), André Ventura (CH) e Márcia Passos (PSD).\n","Foram apreciados, em conjunto, o Projeto de Resolução n.º 471/XIV/1.ª (PCP) — Recomenda ao Governo a reversão da alienação do Novo Banco, a sua transferência para a esfera pública e o apoio especializado às micro, pequenas e médias empresas e, na generalidade, o Projeto de Lei n.º 499/XIV/1.ª (IL) — Condiciona o exercício dos direitos de conversão pelo Estado de créditos em capital do Novo Banco à sua aprovação prévia pela Assembleia da República. Intervieram os Deputados Duarte Alves (PCP), João Cotrim de Figueiredo (IL), José Luís Ferreira (PEV), Cecília Meireles (CDS-PP), Mariana Mortágua (BE), André Silva (PAN), André Ventura (CH), Duarte Pacheco (PSD) e Fernando Anastácio (PS).\n","Foram debatidos, conjuntamente, os Projetos de Resolução n.os 75/XIV/1.ª (CDS-PP) — Recomenda ao Governo que crie uma rede de apoio familiar e promova o estudo e o debate para uma política de família e de natalidade, 77/XIV/1.ª (CDS-PP) — Constituição de uma comissão eventual para o acompanhamento das iniciativas sobre a família e a natalidade, 59/XIV/1.ª (PSD) — Por uma política integrada para a infância e a família e 255/XIV/1.ª (PCP) — Recomenda ao Governo a adoção de medidas transversais e integradas de apoio e incentivo à natalidade. Proferiram intervenções os Deputados João Pinho de Almeida (CDS-PP), Lina Lopes (PSD), Paula Santos (PCP), José Moura Soeiro (BE), Mariana Silva (PEV) e Sónia Fertuzinhos (PS).\n","Foram discutidos, na generalidade, os Projetos de Lei n.os 476/XIV/1.ª (PAN) — Cria uma unidade especial de salvação e resgate animal, procedendo à terceira alteração à Lei n.º 27/2006, de 3 de julho, e à primeira alteração ao Decreto-Lein.º 45/2019, de 1 de abril, 494/XIV/1.ª (Deputada não inscrita Cristina Rodrigues) — Altera a Lei n.º 27/2006, de 3 de julho, e o Decreto-Lei n.º 45/2019, de 1 de abril, procedendo à criação da equipa especial de socorro animal e 501/XIV/1.ª (BE) — Prepara a Proteção Civil para o salvamento, resgate e socorro animal (3.ª alteração à Lei n.º 27/2006, de 3 de julho; 3.ª alteração ao Decreto-Lei n.º 134/2006, de 25 de julho; 3.ª alteração à Lei n.º 65/2007, de 12 de novembro; 2.ª alteração ao Decreto-Lei n.º 45/2019, de 1 de abril; e 2.ª alteração ao Decreto-Lei n.º 116/98, de 5 de maio), juntamente com o Projeto de Resolução n.º 580/XIV/1.ª (PEV) — Formação, no âmbito da Proteção Civil, para salvar e resgatar animais em caso de catástrofe. Intervieram os Deputados Inês de Sousa Real (PAN), Cristina Rodrigues (N insc.), Maria Manuel Rola (BE), Mariana Silva (PEV), António Lima Costa (PSD), Telmo Correia (CDS-PP), Alma Rivera (PCP) e Santinho Pacheco (PS).\n","Foram discutidos, na generalidade, os Projetos de Lei n.os450/XIV/1.ª (PEV) —Apresentação de Relatório do ICNF à Assembleia da República, para acompanhar e reforçar o cumprimento do objetivo nacional de redução da área de eucalipto no espaço florestal, 493/XIV/1.ª (PAN) — Cria a comissão de acompanhamento para a vigilância, prevenção e controlo da regeneração natural dos eucaliptos e das exóticas lenhosas invasoras e determina a elaboração de um plano de controlo da regeneração natural dos eucaliptos e de ação para a vigilância e controlo das exóticas lenhosas invasoras e 500/XIV/1.ª (BE) — Cria uma rede pública de viveiros para multiplicação de espécies autóctones, recuperação de áreas ardidas e transformação da paisagem, juntamente com o Projeto de Resolução n.º 521/XIV/1.ª (PEV) — Recomenda ao Governo apoios para retirar as árvores ardidas com incêndios de 2017, arranque de eucaliptos de crescimento espontâneo e para a (re)florestação com espécies endógenas. Proferiram intervenções os Deputados Mariana Silva (PEV), André Silva (PAN), Ricardo Vicente (BE), Joaquim Barreto (PS), João Dias (PCP), João Moura (PSD) e Cecília Meireles (CDS-PP).\n","Deu-se conta dos Deputados que estiveram presentes, por videoconferência, na reunião plenária. O Presidente (Fernando Negrão) encerrou a sessão eram 19 horas e 3 minutos. \n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"b8nUtetwRYid"},"source":["# Salvando os textos no Drive:\r\n","\r\n","Agora que finalizamos nossa limpeza temos que mandar os textos de volta para o Drive, temos já uma pasta vamos apenas jogar os textos lá."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r0ED8hn_Rik0","executionInfo":{"status":"ok","timestamp":1615667291883,"user_tz":180,"elapsed":437,"user":{"displayName":"Enzo Bustos da Silva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GipjzEo8ZMU7T5CScvwquuNadVZOv9a7EefCtELMQ=s64","userId":"00423683093258305256"}},"outputId":"d8ac4014-25d2-4586-873c-9c76e50873a1"},"source":["cd ../Sumários em .txt"],"execution_count":44,"outputs":[{"output_type":"stream","text":["/content/drive/My Drive/Iniciação Científica/AI Democracy/Sumários em .txt\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"r10IvYDMRnAb","executionInfo":{"status":"ok","timestamp":1615668731581,"user_tz":180,"elapsed":901,"user":{"displayName":"Enzo Bustos da Silva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GipjzEo8ZMU7T5CScvwquuNadVZOv9a7EefCtELMQ=s64","userId":"00423683093258305256"}}},"source":["i = 0\r\n","for text in total_clean:\r\n","    i += 1\r\n","    name = \"Sumário - \"\r\n","    if i < 10:\r\n","        name = name + '00' + str(i) + '.txt'\r\n","    else:\r\n","        name = name + '0' + str(i) + '.txt'\r\n","    with open(name, 'w') as f:\r\n","        f.write(text)"],"execution_count":77,"outputs":[]}]}